[metadata]
name = exovetter
author = Susan Mullally et al.
author_email = smullally@stsci.edu
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://github.com/spacetelescope/exovetter
description = Exoplanet vetting package
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = spacetelescope/exovetter

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    numpy
    astropy>=3
    scipy

[options.extras_require]
all =
    matplotlib
    scikit-learn
    lightkurve>=2
    lpproj
test =
    pytest-cov
    #pytest-astropy-header
    pytest-remotedata
    pytest-doctestplus
docs =
    sphinx-astropy
    sphinx_rtd_theme

[flake8]
exclude = .git,__pycache__,docs/conf.py,build,dist

[tool:pytest]
testpaths = "tests" "docs" "exovetter"
#astropy_header = true
#doctest_plus = enabled
filterwarnings =
    error
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    ignore:Using or importing the ABCs:DeprecationWarning
    ignore:the imp module is deprecated:DeprecationWarning
    ignore:`LightCurveFile.header` is deprecated
    ignore:`np.float` is a deprecated alias:DeprecationWarning
    ignore:`np.int` is a deprecated alias:DeprecationWarning
    ignore:`np.bool` is a deprecated alias:DeprecationWarning
    #ignore:unclosed file:ResourceWarning

[coverage:run]
omit =
    exovetter/tests/*
    exovetter/version*
    */exovetter/tests/*
    */exovetter/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
